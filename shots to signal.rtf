{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;}
\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560

\f0\fs24 \cf2 //don't forget to do read_shots_file.rtf ~shots first\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural

\f1\fs18 \cf0 \
\
\cf2 //take the shining shots array and make it into a signal. then play it. 
\f0\fs24 \cf0 \
\pard\pardeftab560

\fs40 \cf0 (
\fs24 \
\pard\pardeftab560
\cf3 var\cf0  shotSig, shotSigL, dummy, buffer, score, def, sndDur, note, bNum, localShot;\
score = \cf3 CtkScore\cf0 .new;\
\
\pard\pardeftab560
\cf2 //unit normal distribution\
\cf0 \
// I usually use this\
//shotSig = ~shots.normalize(-1, 1);\
\
//but for now\
localShot = [12, 2, 4, 8, 8, 12, 25, 16, 12, 4, 4, 8, 3.2];\
shotSig = localShot;\
\
\
\
shotSig.post;\
\pard\pardeftab560

\f1\fs18 \cf0 \
\pard\pardeftab560

\f0\b\fs24 \cf0  buffer =  \cf3 Buffer\cf0 .loadCollection(s, shotSig, 1);
\f1\b0\fs18 \
\pard\pardeftab560

\f2\fs24 \cf0 \
sndDur = \cf3 BufDur\cf0 .kr(buffer);
\f1\fs26 \
\
\pard\pardeftab560

\fs18 \cf0 score.add(buffer); \
\
\
def = 
\f2\fs24 \cf3 CtkSynthDef\cf0 (\cf4 \\playbackSig\cf0 , \{\cf3 arg\cf0  buff, startPos, rate, noteDur;\
	\cf3 var\cf0  src, envGen, rates, env;\
	\
	\cf2 //
\f0\b PlayBuf.ar(numChannels, bufnum, rate, trigger, startPos, loop, doneAction)
\b0 \cf0 \
\pard\pardeftab560

\f2 \cf0 	src = \cf3 PlayBuf\cf0 .ar(1, buff,  \cf3 BufRateScale\cf0 .kr(buff), 1, startPos * \cf3 BufSampleRate\cf0 .kr(buff), 1.0);\
	\cf3 Out\cf0 .ar(0, \cf3 Pan2\cf0 .ar(src))\
\});
\f1\fs18 \
\

\f2\fs24 score.add(\
			def.new(1.0, 2).startPos_(0).buff_(buffer)\
);\
		\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural

\f1\fs18 \cf0 score.write(\cf5 "~/Desktop/test.aiff"\cf0 .standardizePath,  options: \cf3 ServerOptions\cf0 .new.numOutputBusChannels_(1));\
\pard\pardeftab560

\fs34 \cf0 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural

\fs18 \cf3 Player\cf0 .new(\cf5 "~/Desktop/test.aiff"\cf0 .standardizePath).gui;\
\pard\pardeftab560

\fs34 \cf0 \
\
(
\f0\fs24 \
\pard\pardeftab560
\cf3 var\cf0  shotSig, shotSigL, dummy, buffer, score, def, sndDur, note;\
score = \cf3 CtkScore\cf0 .new;\
\
\pard\pardeftab560
\cf2 //unit normal distribution\cf0 \
dummy = ~shots.normalize(-1, 1);\
shotSig = dummy;\
shotSig.post;\
\
\pard\pardeftab560

\f1\fs18 \cf0 \
\
\pard\pardeftab560
\cf2 //
\f0\b\fs24 loadCollection(server, collection, numChannels, action)\cf0 \
 buffer =  \cf3 Buffer\cf0 .loadCollection(s, shotSig, 1);\
 \
 \
 
\f1\b0\fs18 \
\pard\pardeftab560
\cf3 SynthDef\cf0 (\cf4 \\help_PlayBuf\cf0 , \{\cf3 | out = 0, bufnum = 0 |\cf0 \
	\cf3 Out\cf0 .ar(out, \
		\cf3 PlayBuf\cf0 .ar(1, bufnum, \cf3 BufRateScale\cf0 .kr(bufnum), doneAction:2)\
	)\
\}).play(s, [\cf4 \\out\cf0 , 0, \cf4 \\bufnum\cf0 , b]);\
\
\pard\pardeftab560

\f2\fs24 \cf0 sndDur = \cf3 BufDur\cf0 .kr(buffer);\
\pard\pardeftab560

\f1\fs18 \cf0 \
\pard\pardeftab560

\f2\fs24 \cf0 score.add(\
	\cf2 // straight playback\cf0 \
			def.new(1.0, sndDur).startPos_(0).buff_(buffer).noteDur_(sndDur)\
		);\
		\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural

\f1\fs18 \cf0 score.write(\cf5 "~/Desktop/test.aiff"\cf0 .standardizePath,  options: \cf3 ServerOptions\cf0 .new.numOutputBusChannels_(1));\
\pard\pardeftab560

\fs34 \cf0 )\
\pard\pardeftab560

\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf3 Player\cf0 .new(\cf5 "~/Desktop/test.aiff"\cf0 .standardizePath).gui;\
}